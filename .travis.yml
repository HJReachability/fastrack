env:
  global:
    - ROS_DISTRO=indigo
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - ROS_PARALLEL_JOBS='-j4 -l4'
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages
    - secure: "QfI2ypxv8wpVzZsp7Eqq3CGcMBVM8JLaJus27dT8h4FGtvgRCC3InZ5JGEiweL5bkYyYJCFMHkxMJj4AAZQRubO6GH9bXetPJxUff4rqItfxSGqklKTAAG1J7wwUloI7lI+8gow3seYriiIS/eqrZ7nEZ1bFWYwqdUB/Xl0YjRE7uvTp0D3LVBVWj0XTjmG7MXLLMrjFZvmDABMtB2w4z+KFc01UBz/qnmbpdKaDax15JHAXwHx9zZSyTqJMjsVS1NQQpgVnnFZSx9gGo9bzKj0ewRyos2nGg45cFXMgS1Vnmrr4sOi0Jg83jyCNnzZB+J0EJ4P5x3FllNpCBPrRQC0SB7KvP7f5p2yXf2eU04Pe0mT0/sneIUdRaWiuLIB9S1ah5eZYJNTJ+KSH1Qna1ZY54FsWbehsUUG5YyPdRm0woqwihpFvEDObaTpubYUvyecEHsJJrFsLCR2H8Qyw0C5tTVC3xDrmeeE+d7Ofz+NBL5qNPxzoZsn9z3jVTPzf7z9QxD3Rttm5u/W6HEj4azqSZqcrGrTeaEYDFYPCY8JZJrSQ+mYmwCVbySrASmxpn5JQ+1s2Slp5z56CcMFfA9fLUWr6sCk+p3rNCBi0/GkW2WeegfZd9lha7y6Y4J4Vq+bBlA+sK7ZkOQDsbbNEHEjiF/NL/R5Ma05zeZCD2vU="

language: cpp

compiler:
  - gcc
  #- clang

os:
  - linux

branches:
  only:
    - master

notifications:
  email: false

before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  - sudo apt-get update
  - sudo apt-get install ros-$ROS_DISTRO-ros-base
  - sudo rosdep init
  - rosdep update
  - sudo apt-get install ros-$ROS_DISTRO-tf
  - source /opt/ros/$ROS_DISTRO/setup.bash

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install --yes build-essential doxygen graphviz libgflags-dev libgoogle-glog-dev mercurial cmake libatlas-base-dev libmatio-dev libflann-dev libusb-1.0-0 libusb-1.0-0-dev; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo pip install kitchen; fi

#before_script:
  # Get Eigen. The apt-get version on 12.04 is too old; we need at least 3.1.0.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir eigen && cd eigen; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then hg clone https://bitbucket.org/eigen/eigen; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd eigen && hg update 3.2; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir build && cd build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DCMAKE_BUILD_TYPE=Release ..; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make -j4; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo make install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../../..; fi

  # Get OMPL v1.2.1 (before they switched to gcc5 dependency).
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir ompl && cd ompl; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/ompl/ompl; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ompl && git checkout tags/1.2.1; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir build && cd build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DCMAKE_BUILD_TYPE=Release ..; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make -j4; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo make install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../../..; fi

  # Get rosdoc_lite for auto-generating documentation.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir rosdoc_lite && cd rosdoc_lite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/ros-infrastructure/rosdoc_lite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd rosdoc_lite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo python setup.py install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../..; fi

  # Get crazyflie_clean, since fastrack_crazyflie_demos depends on it.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir crazyflie_clean && cd crazyflie_clean; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/HJReachability/crazyflie_clean; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd crazyflie_clean/ros; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then catkin_make -j4 && source ./devel/setup.bash; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../../..; fi

script:
  - cd ros
  - catkin_make -j4
  - catkin_make run_tests

after_success:
  - cd ..
  - git checkout master
  - rm -rf doc
  - rosdoc_lite ros/src/fastrack
  - rm -rf eigen && rm -rf ompl && rm -rf crazyflie_clean && sudo rm -rf rosdoc_lite

deploy:
  verbose: true
  provider: pages
  skip-cleanup: true
  github-token: $PA_TOKEN
  keep-history: true
  on:
    branch: master
