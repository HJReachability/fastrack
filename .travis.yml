env:
  global:
    - ROS_DISTRO=indigo
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - ROS_PARALLEL_JOBS='-j4 -l4'
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages
    - secure: "H4NZyOiFKxDakDixGonnfx4yTVCq/4kCky6v2ui3htJZhPTWos99UGDUcl8QRrkFmK3NnnKRQ2t6A28uvms3qfI0geFSr/ZlVmQKRyp6ECVbPAVaoZNW5JwAKHJ2BABY1Z8y0P+Xl1Rl3zURb928eY2ljTsFchn0vWpIo3LPxjXpUFr9gpnW9F6HlQWbrLXhT/DFI3vw4o++RaBlz8ba+V7lQvabanVp23Z72ovk9U3lah5sBAcAu/vy7Yp63YS5PBbabYlmm2KgQuNqDzQ0pMD3H7Gdl4FT60RXtrk7S4G+nb/QquQk8G3Djif0zT2J0aUTIN8nqk3U7Szzr5KlfO0wcxIz3hFCE8OlDZkuV8l4a6EeEkRJiIVS0+Tw4IiO8Tj/M+NUkdrGo83PY4bDHzqU/cTanmdEpW/xgBR1JiQZwaMoJfrl5MJ5aDbLBgwCIzGPE1DbpdwsiHp7mIhKbMqL9puXbl/lkwYqmfz0FkyyCu8BwZuOB7q4eu8URmj45miIVwXiC1kqyAlcXsbsQwLTKbI8fxShhOt1UVl0MoRm+PmQU8tlmmt9mxjbs5cyxGtZVFKANcf35K2r047pvg7SvqfI/XXH9/6yA3qg0xnZKHiy5lL3n+GHPlSbr4cKVxJRKQePP2J4Z+LOAEeTfninEWingBlNBizP1kxj9Ms="

language: cpp

compiler:
  - gcc
  #- clang

os:
  - linux

branches:
  only:
    - master

notifications:
  email: false

before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  - sudo apt-get update
  - sudo apt-get install ros-$ROS_DISTRO-ros-base
  - sudo rosdep init
  - rosdep update
  - sudo apt-get install ros-$ROS_DISTRO-tf
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - openssl aes-256-cbc -K $encrypted_fb7b409fc3b6_key -iv $encrypted_fb7b409fc3b6_iv -in github_deploy_key.enc -out github_deploy_key -d
  - chmod 600 github_deploy_key
  - eval `ssh-agent -s`
  - ssh-add github_deploy_key

install:
  - echo $TRAVIS_OS_NAME
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install --yes build-essential
    doxygen graphviz libgflags-dev libgoogle-glog-dev mercurial cmake libatlas-base-dev libmatio-dev libflann-dev libusb-1.0-0 libusb-1.0-0-dev; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo pip install kitchen; fi

#before_script:
  # Get Eigen. The apt-get version on 12.04 is too old; we need at least 3.1.0.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir eigen && cd eigen; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then hg clone https://bitbucket.org/eigen/eigen; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd eigen && hg update 3.2; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir build && cd build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DCMAKE_BUILD_TYPE=Release ..; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make -j4; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo make install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../../..; fi

  # Get OMPL v1.2.1 (before they switched to gcc5 dependency).
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir ompl && cd ompl; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/ompl/ompl; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ompl && git checkout tags/1.2.1; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir build && cd build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DCMAKE_BUILD_TYPE=Release ..; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make -j4; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo make install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../../..; fi

  # Get rosdoc_lite for auto-generating documentation.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir rosdoc_lite && cd rosdoc_lite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/ros-infrastructure/rosdoc_lite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd rosdoc_lite; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo python setup.py install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../..; fi

  # Get crazyflie_clean, since fastrack_crazyflie_demos depends on it.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir crazyflie_clean && cd crazyflie_clean; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/HJReachability/crazyflie_clean; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd crazyflie_clean/ros; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then catkin_make && source ./devel/setup.bash; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../../..; fi

script:
  - cd ros
  - catkin_make -j4
  - catkin_make run_tests

after_success:
  - cd ..
  - git checkout master
  - rm -rf doc
  - rosdoc_lite ros/src/fastrack
  - bash ./deploy.sh
